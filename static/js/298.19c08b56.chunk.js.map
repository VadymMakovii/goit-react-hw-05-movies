{"version":3,"file":"static/js/298.19c08b56.chunk.js","mappings":"gRAGaA,EAAa,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACnC,OACE,SAACC,EAAA,EAAD,CAAKC,GAAG,KAAR,UACE,UAACD,EAAA,EAAD,CAAKE,QAAQ,OAAOC,QAAS,EAA7B,WACE,SAACH,EAAA,EAAD,CAAKC,GAAG,KAAKG,EAAG,EAAhB,2BAA+BN,MAC/B,SAACE,EAAA,EAAD,CAAKC,GAAG,IAAIG,EAAG,EAAf,SACGL,QAKV,E,SC+CD,EArDgB,WACd,IAAQM,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KA2BA,OAzBAC,EAAAA,EAAAA,YAAU,WACRD,GAAa,GACb,IAAME,EAAa,IAAIC,gBAFT,wCAGd,gHAE2BC,EAAAA,EAAAA,IAAgBV,EAAS,CAACW,OAAQH,EAAWG,SAFxE,OAEUC,EAFV,OAGUC,EAAUD,EAASC,QAAQC,KAAI,kBAA8B,CACjEC,GADmC,EAAGA,GAEtCtB,OAFmC,EAAOA,OAG1CC,QAHmC,EAAeA,QAAf,IAMrCU,EAAQS,GATZ,gDAWIG,EAAAA,GAAAA,MAAA,UAAe,KAAMC,UAXzB,yBAaIX,GAAa,GAbjB,6EAHc,sBAoBd,OApBc,mCAmBdY,GACO,WACLV,EAAWW,OACZ,CACF,GAAE,CAACnB,KAEI,OAAJG,QAAI,IAAJA,OAAA,EAAAA,EAAMiB,QAAS,GAEf,SAACzB,EAAA,EAAD,CAAKC,GAAG,IAAIyB,GAAI,EAAGtB,EAAG,EAAtB,uDAOF,UAACJ,EAAA,EAAD,CAAK0B,GAAI,EAAT,UACGlB,IACC,SAACR,EAAA,EAAD,CAAKC,GAAG,KAAKC,QAAQ,OAAOC,QAAS,EAAGC,EAAG,EAAGuB,EAAG,EAAjD,SACGnB,EAAKW,KAAI,gBAAGC,EAAH,EAAGA,GAAItB,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACR,SAACF,EAAD,CAAqBC,OAAQA,EAAQC,QAASA,GAA7BqB,EADT,MAKbV,IAAa,SAAC,KAAD,MAGnB,C","sources":["components/ReviewItem/ReviewItem.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { Box } from 'components/Box/Box';\n\nexport const ReviewItem = ({ author, content }) => {\n  return (\n    <Box as=\"li\">\n      <Box display=\"grid\" gridGap={3}>\n        <Box as=\"h3\" m={0}>{`Author: ${author}`}</Box>\n        <Box as=\"p\" m={0}>\n          {content}\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nReviewItem.propTypes = {\n  author: PropTypes.string.isRequired,\n  content: PropTypes.string.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from '../../services/movie-api';\nimport { toast } from 'react-hot-toast';\nimport { ReviewItem } from 'components/ReviewItem/ReviewItem';\nimport { Box } from 'components/Box/Box';\nimport { ReviewLoader } from 'components/Loader/Loader';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [data, setData] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    const controller = new AbortController();\n    async function fetchInfo() {\n      try {\n        const response = await getMovieReviews(movieId, {signal: controller.signal });\n        const results = response.results.map(({ id, author, content }) => ({\n          id,\n          author,\n          content,\n        }));\n\n        setData(results);\n      } catch (error) {\n        toast.error(`${error.massage}`);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    fetchInfo();\n    return () => {\n      controller.abort();\n    };\n  }, [movieId]);\n\n  if (data?.length < 1) {\n    return (\n      <Box as=\"p\" pl={4} m={0}>\n        We don't have any reviews for this movie\n      </Box>\n    );\n  }\n\n  return (\n    <Box pl={4}>\n      {data && (\n        <Box as=\"ul\" display=\"grid\" gridGap={4} m={0} p={0}>\n          {data.map(({ id, author, content }) => (\n            <ReviewItem key={id} author={author} content={content} />\n          ))}\n        </Box>\n      )}\n      {isLoading && <ReviewLoader />}\n    </Box>\n  );\n};\n\n\nexport default Reviews;"],"names":["ReviewItem","author","content","Box","as","display","gridGap","m","movieId","useParams","useState","data","setData","isLoading","setIsLoading","useEffect","controller","AbortController","getMovieReviews","signal","response","results","map","id","toast","massage","fetchInfo","abort","length","pl","p"],"sourceRoot":""}