{"version":3,"file":"static/js/920.207503dc.chunk.js","mappings":"6QAEaA,EAAOC,EAAAA,GAAAA,GAAH,yHAGR,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACG,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACF,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,I,kBCJAC,EAAOJ,EAAAA,GAAAA,GAAH,uEAEC,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAGNE,GAAWL,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAH,4HACV,SAAAC,GAAC,OAAIA,EAAEC,MAAMK,OAAOC,OAAnB,IAKC,SAAAP,GAAC,OAAIA,EAAEC,MAAMK,OAAOE,MAAnB,I,SCVDC,EAAkB,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,YAC/BC,GAAWC,EAAAA,EAAAA,MAChB,OACE,SAACV,EAAD,WACE,SAACC,EAAD,CAAUU,GAAE,kBAAaJ,GAAMK,MAAQ,CAACC,KAAMJ,GAA9C,SAA0DD,KAG/D,E,kBC6CD,EA/CqB,SAAC,GAAe,IAAbM,EAAY,EAAZA,MACtB,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KA0BA,OAxBAC,EAAAA,EAAAA,YAAU,WAAM,wCAEd,gHAE2BC,EAAAA,EAAAA,IAAgBP,GAF3C,QAEUQ,EAFV,QAGaC,QAAQC,OAAS,GACxBC,EAAAA,GAAAA,MACE,4EAGEF,EAAUD,EAASC,QAAQG,KAAI,gBAAGnB,EAAH,EAAGA,GAAIoB,EAAP,EAAOA,MAAP,MAAoB,CACvDpB,GAAIA,EAAGqB,WACPD,MAAAA,EAFmC,IAIrCV,EAAUM,GAZd,gDAcIE,EAAAA,GAAAA,MAAA,UAAe,KAAMI,UAdzB,yBAgBIV,GAAa,GAhBjB,6EAFc,sBACdA,GAAa,GADC,mCAqBdW,EACD,GAAE,CAAChB,KAGF,UAACiB,EAAA,EAAD,CAAKC,GAAI,EAAT,UACGhB,IACC,SAACrB,EAAD,UACGqB,EAAOU,KAAI,gBAAGnB,EAAH,EAAGA,GAAIoB,EAAP,EAAOA,MAAP,OACV,SAACrB,EAAD,CAA0BC,GAAIA,EAAIC,YAAamB,GAAzBpB,EADZ,MAKfW,IAAa,SAAC,KAAD,MAGnB,C","sources":["components/SearchMovies/SearchMovies.styled.jsx","components/SearchMovieItem/SearchMovieItem.styled.jsx","components/SearchMovieItem/SearchMovieItem.jsx","components/SearchMovies/SearchMovies.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: ${p => p.theme.space[3]}px;\n  padding: ${p => p.theme.space[0]}px;\n  margin: ${p => p.theme.space[0]}px;\n`;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Item = styled.li`\n  list-style: inside;\n  padding-left: ${p => p.theme.space[1]}px;\n`;\n\nexport const ItemLink = styled(Link)`\n  color: ${p => p.theme.colors.primary};\n\n  &:hover,\n  &:focus-visible {\n    text-decoration: none;\n    color: ${p => p.theme.colors.accent};\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport { Item, ItemLink } from './SearchMovieItem.styled';\n\nexport const SearchMovieItem = ({ id, description }) => {\n const location = useLocation();\n  return (\n    <Item>\n      <ItemLink to={`/movies/${id}`} state={ {from: location}}>{description}</ItemLink>\n    </Item>\n  );\n};\n\nSearchMovieItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n};","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { getSearchMovies } from 'services/movie-api';\nimport toast from 'react-hot-toast';\nimport { List } from './SearchMovies.styled';\nimport { SearchMovieItem } from 'components/SearchMovieItem/SearchMovieItem';\nimport { SearcMoviesLoader } from 'components/Loader/Loader';\nimport { Box } from 'components/Box/Box';\n\nconst SearchMovies = ({ query }) => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    async function fetchMovies() {\n      try {\n        const response = await getSearchMovies(query);\n        response.results.length < 1 &&\n          toast.error(\n            'Sorry, there are no movies matching your search query. Please try again.'\n          );\n\n        const results = response.results.map(({ id, title }) => ({\n          id: id.toString(),\n          title,\n        }));\n        setMovies(results);\n      } catch (error) {\n        toast.error(`${error.massage}`);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    fetchMovies();\n  }, [query]);\n\n  return (\n    <Box pt={3}>\n      {movies && (\n        <List>\n          {movies.map(({ id, title }) => (\n            <SearchMovieItem key={id} id={id} description={title} />\n          ))}\n        </List>\n      )}\n      {isLoading && <SearcMoviesLoader />}\n    </Box>\n  );\n};\n\nSearchMovies.propTypes = {\n  query: PropTypes.string.isRequired,\n};\n\n\nexport default SearchMovies;"],"names":["List","styled","p","theme","space","Item","ItemLink","Link","colors","primary","accent","SearchMovieItem","id","description","location","useLocation","to","state","from","query","useState","movies","setMovies","isLoading","setIsLoading","useEffect","getSearchMovies","response","results","length","toast","map","title","toString","massage","fetchMovies","Box","pt"],"sourceRoot":""}